name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  backend_install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install

  frontend_install:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install

  deploy:
    needs: [backend_install, frontend_install]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # AWS ECR login
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Build and push backend container
      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPO_BACKEND }} ./backend
          $(aws ecr get-login --no-include-email)
          docker tag ${{ secrets.AWS_ECR_REPO_BACKEND }}:latest ${{ secrets.AWS_ECR_REPO_BACKEND }}:latest
          docker push ${{ secrets.AWS_ECR_REPO_BACKEND }}:latest
      # Build and push frontend container
      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.AWS_ECR_REPO_FRONTEND }} ./frontend
          docker tag ${{ secrets.AWS_ECR_REPO_FRONTEND }}:latest ${{ secrets.AWS_ECR_REPO_FRONTEND }}:latest
          docker push ${{ secrets.AWS_ECR_REPO_FRONTEND }}:latest
